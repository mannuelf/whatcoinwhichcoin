/*!
 * @nuxt/cli v2.4.3 (c) 2016-2019

 * - All the amazing contributors
 * Released under the MIT License.
 * Website: https://nuxtjs.org
*/
'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

const consola = _interopDefault(require('consola'));
const __chunk_2 = require('./cli-chunk2.js');
const config = require('@nuxt/config');

const common = {
  spa: {
    alias: 's',
    type: 'boolean',
    description: 'Launch in SPA mode'
  },
  universal: {
    alias: 'u',
    type: 'boolean',
    description: 'Launch in Universal mode (default)'
  },
  'config-file': {
    alias: 'c',
    type: 'string',
    default: config.defaultNuxtConfigFile,
    description: `Path to Nuxt.js config file (default: \`${config.defaultNuxtConfigFile}\`)`
  },
  modern: {
    alias: 'm',
    type: 'string',
    description: 'Build/Start app for modern browsers, e.g. server, client and false',
    prepare(cmd, options, argv) {
      if (argv.modern !== undefined) {
        options.modern = __chunk_2.normalizeArg(argv.modern);
      }
    }
  },
  version: {
    alias: 'v',
    type: 'boolean',
    description: 'Display the Nuxt version'
  },
  help: {
    alias: 'h',
    type: 'boolean',
    description: 'Display this message'
  }
};

const server = {
  port: {
    alias: 'p',
    type: 'string',
    description: 'Port number on which to start the application',
    prepare(cmd, options, argv) {
      if (argv.port) {
        options.server.port = +argv.port;
      }
    }
  },
  hostname: {
    alias: 'H',
    type: 'string',
    description: 'Hostname on which to start the application',
    prepare(cmd, options, argv) {
      if (argv.hostname === '') {
        consola.fatal('Provided hostname argument has no value');
      }
    }
  },
  'unix-socket': {
    alias: 'n',
    type: 'string',
    description: 'Path to a UNIX socket'
  }
};

exports.common = common;
exports.server = server;
